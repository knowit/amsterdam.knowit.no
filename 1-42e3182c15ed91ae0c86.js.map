{"version":3,"sources":["webpack:///./src/util/colors.js","webpack:///./src/util/spacing.js","webpack:///./src/util/mediaQueries.js","webpack:///./src/json/index.js","webpack:///./src/components/Button.jsx","webpack:///./src/components/Content.jsx","webpack:///./src/components/Slot/SlotStyles.js","webpack:///./src/graphql/airtable.js","webpack:///./src/components/Favorites/AddFavorite.jsx","webpack:///./src/components/Speaker/SpeakerModal.jsx","webpack:///./src/components/Speaker/SpeakerFavourites.jsx","webpack:///./src/components/Speaker/Speaker.jsx","webpack:///./src/components/Speaker/index.js","webpack:///./src/components/Slot/SlotSpeakers.jsx","webpack:///./src/components/Slot/index.js","webpack:///./src/components/Slot/Slot.jsx","webpack:///./src/components/Slot/SlotsWithRoom.jsx","webpack:///./src/components/Slot/Slots.jsx","webpack:///./src/layouts/GoogleMaps.jsx","webpack:///./src/layouts/Navigation.jsx","webpack:///./src/layouts/index.js","webpack:///./src/components/Seperator.jsx","webpack:///./src/components/ContentSection.jsx","webpack:///./src/components/SafeLink.jsx","webpack:///./src/util/cookieHelper.js"],"names":["__webpack_require__","d","__webpack_exports__","oldColors","polished_lib_color_darken__WEBPACK_IMPORTED_MODULE_0__","polished_lib_color_darken__WEBPACK_IMPORTED_MODULE_0___default","n","primary","secondary","grey","greyLight","greyLighter","greyLightest","greyDark","background","default","dark","darken","darker","backgroundGray","grayDark","knowit","green","blueDarkest","blueDark","blue","blueLight","blueLighest","yellow","heartRed","spacingUnit","xsmall","small","normal","medium","large","xlarge","xxlarge","season","short","shortCapitalized","long","longCapitalized","eventData","date","startDate","longDate","venue","venueUrl","address","addressUrl","city","country","year","monthNumber","endDate","cities","viewmodel","title","event","Object","assign","gmapsUrl","meta","description","keywords","days","label","schedules","talks","villages","hoverStyle","css","colors","strippedStyle","name","styles","appearances","stripped","outline","active","StyledButton","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_5__","target","p","appearance","Button","_ref","children","rest","_objectWithoutPropertiesLoose","_emotion_core__WEBPACK_IMPORTED_MODULE_6__","_extends","StyledContent","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_4__","backgroundColor","globalStyles","spacing","Content","_emotion_core__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6__","typeColors","common","dev","digi","gridTemplates","desktop","mobile","keynote","responsiveStyles","type","room","speakers","getViewTypeForDesktop","viewType","getStyledSlotGridWrapperStyle","isMobile","_emotion_css__WEBPACK_IMPORTED_MODULE_1__","StyledSlotGridWrapper","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__","mediaQueries","getSlotGridStyle","desktopOrMobile","other","StyledSlotGrid","rowGap","StyledType","StyledTime","StyledTitle","StyledFavorite","StyledDuration","StyledRoom","StyledRoomLabel","StyledRoomIcon","StyledRoomName","StyledDescription","StyledSpeakers","StyledUserIcon","StyledUserLabel","StyledUserName","fetchSlots","data","_public_static_d_1665885952_json__WEBPACK_IMPORTED_MODULE_1__","allAirtable","edges","flatMap","edge","node","StyledFavoriteIcon","styled","FavoriteIcon","_templateObject","StyledFavoriteText","_templateObject2","StyledFavoriteBorder","FavoriteBorder","_templateObject3","AddFavorite","startTime","setFavorites","favorites","uniqueSlotIdentifier","isFavoriteActive","find","fav","core_browser_esm","onClick","updatedCookie","filter","favorite","newFavorites","concat","_toConsumableArray","css_browser_esm","fontSize","useStyles","makeStyles","theme","modal","display","margin","StyledModal","styled_base_browser_esm","SpeakerModal","_ref2","buttonText","classes","_React$useState","React","useState","open","setOpen","handleClose","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","SpeakerModal_ref","Close_default","a","StyledSpeakerFavourites","StyledList","favouriteCategories","SpeakerFavourites","speaker_favourites","splittedFavourites","split","map","favourite","index","length","react_default","Fragment","SpeakerFavourites_ref","key","StyledSpeakerContainer","StyledSpeakerRecreation","StyledImage","StyledIcon","Speaker","_ref$slot","slot","userIds","speaker_bio","speaker_image","speaker_recreation","imageUrl","localFiles","publicURL","src","Person_default","Speaker_SpeakerFavourites","SlotSpeakers","Speaker_SpeakerModal","components_Speaker","Slot","SlotStyles","start","end","duration","Slot_ref","dangerouslySetInnerHTML","__html","Favorites_AddFavorite","time","Slot_SlotSpeakers","Home_default","StyledSlotWithRooms","SlotsWithRoom","groupedByRoom","groupBy","slots","subSlot","sortedRoomsByLength","keys","roomKey","sort","b","Date","SlotsWithRoom_ref","groupSlots","1","StyledSlots","Slots","removeFavorite","noGroupBy","isFavourites","activeDay","_useState","updateFavorites","setCookie","JSON","stringify","useEffect","favoritesCookies","getCookie","document","cookie","currentCookie","parse","components_Slot","groupedByDate","startKey","day","groupedByStart","groups","newSlots","forEach","foundGroupStart","group","foundGroupEnd","alreadyPushed","newSlot","alreadyPushedIndex","findIndex","Slots_toConsumableArray","slice","push","newTestSlots","Slot_SlotsWithRoom","defaultProps","StyledGoogleMapsWrapper","StyledGoogleMapsBlocker","StyleGoogleMapsContent","StyledGoogleMaps","GoogleMaps","href","rel","frameBorder","StyledNavigationContainer","StyledNavigation","StyledPushElement","routes","to","StyledSafeLink","SafeLink","Navigation","route","activeStyle","borderBottom","marginBottom","DefaultLayout","showGoogleMaps","Helmet_default","content","layouts_Navigation","layouts_GoogleMaps","StyledSvg","SectionSeparator","position","previousSectionColor","nextSectionColor","viewBox","version","xmlns","stroke","strokeWidth","fill","fillRule","transform","points","StyledSection","minHeight","color","StyledInnerSection","ContentSection","withTopSeperator","withBottomSeperator","ContentSection_objectWithoutPropertiesLoose","react","ContentSection_extends","Seperator","linkStyle","hoverColor","gatsby_link__WEBPACK_IMPORTED_MODULE_7___default","value","removeCookie","expires","setTime","getTime","toUTCString","encodeURIComponent","cookies","cookieParts","decodeURIComponent","pop","shift"],"mappings":"0FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,KAAAK,EAAAL,EAAAM,EAAAF,GAKaD,EAAY,CACvBI,QAAS,UACTC,UAAW,UACXC,KAAM,UACNC,UAPgB,UAQhBC,YAAa,UACbC,aARmB,UASnBC,SAAU,UAEVC,WAAY,CACVC,QAAS,UACTC,KAAMC,IAAO,GAAK,WAClBC,OAAQD,IAAO,GAAK,WACpBE,eAfiB,UAgBjBC,SAAU,WAEZC,OAAQ,CACNC,MAAO,YAIIpB,EAAA,GACbqB,YAAa,UACbC,SAAU,UACVC,KAAM,UACNC,UAAW,UACXC,YAAa,UACbL,MAAO,UACPb,KAAM,UACNmB,OAAQ,UACRC,SAAU,6CCjCG3B,EAAA,GACb4B,YAHkB,GAIlBC,OAAWD,MACXE,MAAUF,MACVG,OAAWH,OACXI,OAAWJ,OACXK,MAAUL,OACVM,OAAWN,OACXO,QAAYP,0CCVC5B,EAAA,GACbmC,QAAS,oBACTD,OAAQ,oBACRD,MAAO,mBACPD,OAAQ,mBACRF,MAAO,mBACPD,OAAQ,gGCHJO,EAAS,CACbC,MAAO,OACPC,iBAAkB,OAClBC,KAAM,SACNC,gBAAiB,UAKNC,EAAY,CACvBC,KAASC,iCACTC,SAAaD,iCACbE,MAAO,4BACPC,SAAU,mCACVC,QAAS,oBACTC,WAAY,wCACZC,KAAM,YACNC,QAAS,YACTC,KAnBW,OAoBXC,YAAa,GACbhB,SACAO,UAfgB,cAgBhBU,QAfc,cAgBdC,OAAQ,CACN,SACA,YACA,SACA,WACA,YACA,UAIEC,EAAY,CAChBC,MAAK,cAAgBf,EAAUL,OAAOI,gBAAjC,IAAoDC,EAAUU,KACnEM,MAAKC,OAAAC,OAAA,GACAlB,EADA,CAEHmB,SACE,+RAEJC,KAAM,CACJL,MAAK,+BAAiCf,EAAUU,KAChDW,YAAW,mGAAqG1B,EAAOI,gBAA5G,6BAA2JC,EAAUC,KAArK,MAA+KD,EAAUQ,KAAzL,KAAkMR,EAAUS,QAA5M,IACXa,SAAQ,eAAiBtB,EAAUQ,KAA3B,KAAoCR,EAAUS,QAA9C,mBAEVc,KAAM,CACJ,CACEtB,KAAM,KACNuB,MAAO,iBAET,CACEvB,KAAM,IACNuB,MAAO,eAET,CACEvB,KAAM,IACNuB,MAAO,eAET,CACEvB,KAAM,IACNuB,MAAO,gBAGXC,UAAW,GACXC,MAAO,GACPC,SAAU,IAGGb,yUChEf,IAAMc,EAAaC,YAAH,oBACMvD,IAAO,GAAKwD,IAAOhD,MADzB,qBAEMR,IAAO,GAAKwD,IAAOhD,MAFzB,iBAMViD,EAAa,CAAAC,KAAA,UAAAC,OAAA,sLAabC,EAAc,CAClBC,SAAUN,YACNE,EADI,oBAIFA,EAJE,MAORK,QAASP,YAAF,gCAEIC,IAAOhD,KAFX,qCAMiBgD,IAAOhD,KANxB,iBAOagD,IAAOhD,KAPpB,kBAWPuD,OAAQT,GAEGU,EAAYrB,OAAAsB,EAAA,EAAAtB,CAAA,UAAAuB,OAAA,YAAAvB,CAAA,wCAEHa,IAAOhD,KAFJ,qBAGHgD,IAAOhD,KAHJ,qHAWnB8C,EAXmB,KAarB,SAAAa,GAAC,OAAIA,EAAEC,YAAcR,EAAYO,EAAEC,aAbd,MA4BVC,IAXA,SAAAC,GAAA,IAAGF,EAAHE,EAAGF,WAAYG,EAAfD,EAAeC,SAAaC,sIAA5BC,CAAAH,EAAA,kCACb3B,OAAA+B,EAAA,EAAA/B,CAACqB,EAADW,EAAA,CAAcP,WAAYA,GAAgBI,GACvCD,yGC5DL,IAAMK,EAAajC,OAAAkC,EAAA,EAAAlC,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,mEAIG,SAAAwB,GAAC,OAAIA,EAAEW,iBAAmB,SAJ7B,KAObC,EAAexB,YAAH,kCAILC,IAAOjD,SAJF,iBAKEyE,IAAQnE,YAAc,EALxB,iZA0CHoE,IAPC,SAAAX,GAAA,IAAGC,EAAHD,EAAGC,SAAaC,sIAAhBC,CAAAH,EAAA,qBACd3B,OAAAuC,EAAA,EAAAvC,CAACwC,EAAA,SAAD,KACExC,OAAAuC,EAAA,EAAAvC,CAACuC,EAAA,EAAD,CAAQvB,OAAQoB,IAChBpC,OAAAuC,EAAA,EAAAvC,CAACiC,EAAkBJ,EAAOD,8nBC7CjBa,EAAa,CACxBC,OAAQ7B,IAAOjD,SACf+E,IAAK9B,IAAOnD,MACZkF,KAAM/B,IAAOhD,MAGTgF,EAAgB,CACpBF,IAAK,CACHG,QAAO,CAAA/B,KAAA,SAAAC,OAAA,8MASP+B,OAAM,CAAAhC,KAAA,SAAAC,OAAA,8OAYR4B,KAAM,CACJE,QAAO,CAAA/B,KAAA,SAAAC,OAAA,8MASP+B,OAAM,CAAAhC,KAAA,SAAAC,OAAA,8OAYR0B,OAAQ,CACNI,QAAO,CAAA/B,KAAA,SAAAC,OAAA,8MASP+B,OAAM,CAAAhC,KAAA,SAAAC,OAAA,8OAYRgC,QAAS,CACPF,QAAO,CAAA/B,KAAA,UAAAC,OAAA,iOAUP+B,OAAM,CAAAhC,KAAA,SAAAC,OAAA,mNAaJiC,EAAmB,CACvBC,KAAM,CACJJ,QAAO,CAAA/B,KAAA,SAAAC,OAAA,6DAIP+B,OAAM,CAAAhC,KAAA,UAAAC,OAAA,wFAMRmC,KAAM,CACJL,QAAO,CAAA/B,KAAA,SAAAC,OAAA,oHAKP+B,OAAM,CAAAhC,KAAA,UAAAC,OAAA,+HAQRoC,SAAU,CACRN,QAAO,CAAA/B,KAAA,UAAAC,OAAA,6HAKP+B,OAAM,CAAAhC,KAAA,SAAAC,OAAA,4IAUJqC,EAAwB,SAAAC,GAAQ,MACvB,QAAbA,EAAqB,UAAY,UAE7BC,EAAgC,SAACD,EAAUE,GAC/C,YADoE,IAArBA,OAAW,GACzC,WAAbF,GAAyBE,EAC3BxD,OAAAyD,EAAA,aACYpB,IAAQjE,MADpB,mBAE+B,WAAbkF,IAA0BE,GAAYnB,IAAQhE,OAFhE,uBAGwBgE,IAAQjE,MAHhC,6EAUF4B,OAAAyD,EAAA,iBACgBpB,IAAQ9D,MADxB,kDAG2B8D,IAAQjE,MAHnC,0EAOqBiE,IAAQ9D,MAP7B,OAWWmF,EAAqB1D,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,yDAI9B,SAAAwB,GAAC,OAAI+B,EAA8B/B,EAAE8B,UAAU,IAJjB,YAMtBM,IAAatF,OANS,KAO5B,SAAAkD,GAAC,OAAI+B,EAA8B/B,EAAE8B,UAAU,IAPnB,MAW5BO,EAAmB,SAACX,EAAMI,EAAUE,QAAqB,IAArBA,OAAW,GACnD,IAAMM,EACS,WAAbR,GAAyBE,EAAW,SAAW,UACjD,OAAIN,EACKL,EAAcK,GAAMY,GAEtBjB,EAAckB,MAAMD,IAGhBE,EAAchE,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,6CAGdqC,IAAQhE,OAHM,iBAIT,SAAAmD,GAAC,OAAIA,EAAEyC,QAAU5B,IAAQjE,OAJhB,oBAKNiE,IAAQhE,OALF,IAMvB,SAAAmD,GAAC,OAAIqC,EAAiBrC,EAAE0B,KAAM1B,EAAE8B,UAAU,IANnB,iCAWfM,IAAatF,OAXE,KAYrB,SAAAkD,GAAC,OAAIqC,EAAiBrC,EAAE0B,KAAM1B,EAAE8B,UAAU,IAZrB,MAgBdY,EAAUlE,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,mCAED,SAAAwB,GAAC,OAAKA,EAAE0B,KAAOT,EAAWjB,EAAE0B,MAAQT,EAAWsB,OAF9C,qBAGD,SAAAvC,GAAC,OAAKA,EAAE0B,KAAOT,EAAWjB,EAAE0B,MAAQT,EAAWsB,OAH9C,IAInB,SAAAvC,GAAC,OAAIyB,EAAiBC,KAAKG,EAAsB7B,EAAE8B,YAJhC,YAMXM,IAAatF,OANF,KAOjB2E,EAAiBC,KAAKH,OAPL,KAYVoB,EAAUnE,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,CAAAe,KAAA,SAAAC,OAAA,oBAIVoD,EAAWpE,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,CAAAe,KAAA,SAAAC,OAAA,qBAIXqD,EAAcrE,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,CAAAe,KAAA,UAAAC,OAAA,2CAKdsD,EAActE,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,CAAAe,KAAA,SAAAC,OAAA,wBAIduD,EAAUvE,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,+BAGnB,SAAAwB,GAAC,OAAIyB,EAAiBE,KAAKE,EAAsB7B,EAAE8B,YAHhC,YAKXM,IAAatF,OALF,KAMjB2E,EAAiBE,KAAKJ,OANL,KAUVyB,EAAexE,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,0DAKPqC,IAAQjE,MALD,UAMfyC,IAAOhE,KANQ,MAUf4H,EAAczE,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,CAAAe,KAAA,UAAAC,OAAA,wBAGd0D,EAAc1E,OAAA2D,EAAA,EAAA3D,CAAA,KAAAuB,OAAA,cAAAvB,CAAA,CAAAe,KAAA,SAAAC,OAAA,wBAId2D,EAAiB3E,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,cAAAvB,CAAA,CAAAe,KAAA,UAAAC,OAAA,wCAKjB4D,EAAc5E,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,cAAAvB,CAAA,8DAIvB,SAAAwB,GAAC,OAAIyB,EAAiBG,SAASC,EAAsB7B,EAAE8B,YAJhC,YAMfM,IAAatF,OANE,KAOrB2E,EAAiBG,SAASL,OAPL,KAWd8B,EAAc7E,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,cAAAvB,CAAA,CAAAe,KAAA,SAAAC,OAAA,2BAId8D,EAAe9E,OAAA2D,EAAA,EAAA3D,CAAA,OAAAuB,OAAA,cAAAvB,CAAA,6DAIPqC,IAAQjE,MAJD,UAKfyC,IAAOhE,KALQ,MASfkI,EAAc/E,OAAA2D,EAAA,EAAA3D,CAAA,KAAAuB,OAAA,cAAAvB,CAAA,CAAAe,KAAA,UAAAC,OAAA,2IClSdgE,EAAa,WACxB,IAAMC,EAAIC,EAAAD,KAkCV,OAHEA,GAAQA,EAAKE,aAAeF,EAAKE,YAAYC,MACzCH,EAAKE,YAAYC,MAAMC,QAAQ,SAAAC,GAAI,OAAIA,EAAKC,KAAKN,OACjD,i8BC3BR,IAAMO,EAAqBC,YAAOC,IAAPD,CAAHE,IACb9E,IAAO5C,UAGZ2H,EAAqBH,YAAO,IAAPA,CAAHI,KAIlBC,EAAuBL,YAAOM,IAAPN,CAAHO,IACfnF,IAAOhE,KAILgE,IAAO5C,UAwCLgI,EApCK,SAAAtE,GAAyD,IAAtD7B,EAAsD6B,EAAtD7B,MAAOd,EAA+C2C,EAA/C3C,KAAMkH,EAAyCvE,EAAzCuE,UAAWC,EAA8BxE,EAA9BwE,aAAcC,EAAgBzE,EAAhByE,UACrDC,EAA0BrH,EAAN,IAAckH,EAAd,IAA2BpG,EAC/CwG,IAAqBF,EAAUG,KACnC,SAAAC,GAAG,OAAIA,IAAQH,IAcjB,OACErG,OAAAyG,EAAA,EAAAzG,CAAC0B,EAAA,EAAD,CACED,WAAW,WACXiF,QAfoB,WACtB,GAAIJ,EAAkB,CACpB,IAAMK,EAAgBP,EAAUQ,OAC9B,SAAAC,GAAQ,OAAIA,IAAaR,IAE3BF,EAAaQ,OACR,CACL,IAAMG,EAAY,GAAAC,OAAAC,EAAOZ,GAAP,CAAkBC,IACpCF,EAAaW,KAQblG,IAAGZ,OAAAiH,EAAA,EAAAjH,CAAA,gBACeqC,IAAQjE,MADvB,MAGFkI,EACCtG,OAAAyG,EAAA,EAAAzG,CAACwF,EAAD,CAAoB0B,SAAS,UAE7BlH,OAAAyG,EAAA,EAAAzG,CAAC8F,EAAD,CAAsBoB,SAAS,UAEjClH,OAAAyG,EAAA,EAAAzG,CAAC4F,EAAD,KACGU,EAAmB,QAAU,mFC3ChCa,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,QAAS,OACTC,OAAQ,aAINC,EAAWzH,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,0EAKJqC,IAAQhE,OALJ,6DAULuF,IAAatF,OAVR,2FA0EFqJ,EAzDM,SAAAC,GAA8B,IAA3BhG,EAA2BgG,EAA3BhG,SAAUiG,EAAiBD,EAAjBC,WAC1BC,EAAUX,IADiCY,EAEzBC,IAAMC,UAAS,GAAhCC,EAF0CH,EAAA,GAEpCI,EAFoCJ,EAAA,GAQ3CK,EAAc,WAClBD,GAAQ,IAGV,OACEnI,OAAAyG,EAAA,EAAAzG,CAAA,WACEA,OAAAyG,EAAA,EAAAzG,CAAC0B,EAAA,EAAD,CACEd,IAAGZ,OAAAiH,EAAA,EAAAjH,CAAA,SACQa,IAAOhD,KADf,oDAMUgD,IAAOjD,SANjB,MASH6D,WAAW,WACXiF,QArBa,WACjByB,GAAQ,KAqBHN,GAEH7H,OAAAyG,EAAA,EAAAzG,CAACqI,EAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjBC,UAAWV,EAAQR,MACnBY,KAAMA,EACNO,QAASL,EACTM,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,MAEX9I,OAAAyG,EAAA,EAAAzG,CAAC+I,EAAA,EAAD,CAAMC,GAAId,GACRlI,OAAAyG,EAAA,EAAAzG,CAACyH,EAAD,KACEzH,OAAAyG,EAAA,EAAAzG,CAAC0B,EAAA,EAAD,CACEd,IAAGqI,EAGHvC,QAAS0B,EACT3G,WAAW,YACXzB,OAAAyG,EAAA,EAAAzG,CAACkJ,EAAAC,EAAD,OAEDvH,OCjFPwH,SAAuBpJ,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,iDAIXqC,IAAQhE,OAJG,4BAWvBgL,EAAUrJ,OAAA0H,EAAA,EAAA1H,CAAA,MAAAuB,OAAA,YAAAvB,CAAA,CAAAe,KAAA,UAAAC,OAAA,cAIVsI,EAAsB,CAC1B,MACA,gBACA,WACA,aACA,oDAsCaC,EAnCW,SAAA3B,GAA4B,IAAzB4B,EAAyB5B,EAAzB4B,mBAC3B,IAAKA,EACH,OAAO,KAET,IAAMC,EAAqBD,EACxBE,MAAM,KACNC,IAAI,SAACC,EAAWC,GACf,OAAyB,IAArBD,EAAUE,OACL,KAGP9J,OAAAyG,EAAA,EAAAzG,CAAA+J,EAAAZ,EAAAa,SAAA,KACEhK,OAAAyG,EAAA,EAAAzG,CAAA,cAAYsJ,EAAoBO,GAAhC,MACA7J,OAAAyG,EAAA,EAAAzG,CAAA,YAAO4J,MAIZhD,OAAO,SAAAgD,GAAS,OAAIA,IACvB,OACE5J,OAAAyG,EAAA,EAAAzG,CAACoJ,EAAD,KACEpJ,OAAAyG,EAAA,EAAAzG,CAAA,MACEY,IAAGqJ,GADL,iBAMAjK,OAAAyG,EAAA,EAAAzG,CAACqJ,EAAD,KACGI,EAAmBE,IAAI,SAACC,EAAWC,GAAZ,OACtB7J,OAAAyG,EAAA,EAAAzG,CAAA,MAAIkK,IAAG,aAAeL,GAAUD,QClDpCO,EAAsBnK,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,6MAUhB4D,IAAatF,OAVG,kJAsBtB8F,EAAWpE,OAAA0H,EAAA,EAAA1H,CAAA,MAAAuB,OAAA,YAAAvB,CAAA,CAAAe,KAAA,UAAAC,OAAA,mDAMX2D,EAAiB3E,OAAA0H,EAAA,EAAA1H,CAAA,QAAAuB,OAAA,YAAAvB,CAAA,CAAAe,KAAA,UAAAC,OAAA,oCAKjBoJ,EAAuBpK,OAAA0H,EAAA,EAAA1H,CAAA,QAAAuB,OAAA,YAAAvB,CAAA,CAAAe,KAAA,UAAAC,OAAA,6BAKvBqJ,EAAWrK,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,0DAKL4D,IAAatF,OALR,sBAUXgM,EAAUtK,OAAA0H,EAAA,EAAA1H,CAAA,QAAAuB,OAAA,YAAAvB,CAAA,qEAOJ4D,IAAatF,OAPT,6BAcV2D,EAAajC,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,CAAAe,KAAA,UAAAC,OAAA,uFC/DJuJ,GDuEC,SAAA5I,GAQV,IAAA6I,EAAA7I,EAPJ8I,KACEC,EAMEF,EANFE,QACAC,EAKEH,EALFG,YACAC,EAIEJ,EAJFI,cACApB,EAGEgB,EAHFhB,mBACAqB,EAEEL,EAFFK,mBAGIC,EACJF,GACAA,EAAcG,YACdH,EAAcG,WAAW,IACzBH,EAAcG,WAAW,GAAGC,UAC9B,OACEhL,OAAAyG,EAAA,EAAAzG,CAACmK,EAAD,KACGW,EACC9K,OAAAyG,EAAA,EAAAzG,CAACqK,EAAD,CAAaY,IAAKH,IAElB9K,OAAAyG,EAAA,EAAAzG,CAACsK,EAAD,KACEtK,OAAAyG,EAAA,EAAAzG,CAACkL,EAAA/B,EAAD,CAAQjC,SAAS,WAGrBlH,OAAAyG,EAAA,EAAAzG,CAACoE,EAAD,KAAcsG,GACd1K,OAAAyG,EAAA,EAAAzG,CAACiC,EAAD,KACEjC,OAAAyG,EAAA,EAAAzG,CAAC2E,EAAD,KACGgG,GACC,2DAEJ3K,OAAAyG,EAAA,EAAAzG,CAACmL,EAAD,CAAmB3B,mBAAoBA,IACtCqB,GACC7K,OAAAyG,EAAA,EAAAzG,CAACoK,EAAD,KACEpK,OAAAyG,EAAA,EAAAzG,CAAA,qCACAA,OAAAyG,EAAA,EAAAzG,CAAA,SAAI6K,OEpGDO,GANM,SAAAzJ,GAAA,IAAG8I,EAAH9I,EAAG8I,KAAH,OACnBzK,OAAAyG,EAAA,EAAAzG,CAACqL,EAAD,CAAcxD,WAAY4C,EAAKC,SAC7B1K,OAAAyG,EAAA,EAAAzG,CAACsL,GAAD,CAASb,KAAMA,yDCHJc,GCwBF,SAAA3D,GAAuD,IAApD6C,EAAoD7C,EAApD6C,KAAYrE,GAAwCwB,EAA9C5I,KAA8C4I,EAAxCxB,WAAWD,EAA6ByB,EAA7BzB,aAAc7C,EAAesE,EAAftE,SACnD,OACEtD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,CAAuBlI,SAAUA,GAC/BtD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,CAAYtI,KAAMuH,EAAKvH,KAAMI,SAAUA,IACvCtD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,CACEtI,KAAMuH,EAAKvH,KACXI,SAAUA,EACVW,QAASwG,EAAKrK,cAAgBqK,EAAKtH,MAAQ,KAC3CnD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAAA,SAAIyK,EAAK3K,QAEXE,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAAA,SAAOyK,EAAKgB,MAAZ,KAAqBhB,EAAKiB,IAAM,IAAM,IAAtC,KAA4CjB,EAAKiB,KAAO,MAEzDjB,EAAKkB,UACJ3L,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACGf,EAAKkB,SAAclB,EAAKkB,SAAxB,YAA8C,gBAGlDlB,EAAKrK,aACJJ,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAAA,OACEY,IAAGgL,GAGHC,wBAAyB,CACvBC,OAAQrB,EAAKrK,gBAKrBJ,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAAC+L,EAAD,CACEjM,MAAO2K,EAAK3K,MACZoG,UAAWuE,EAAKgB,OAAShB,EAAKuB,KAC9B7F,aAAcA,EACdC,UAAWA,EACXpH,KAAMyL,EAAKzL,QAGdyL,EAAKC,SACJ1K,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,CAAgBlI,SAAUA,GACxBtD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAACkL,EAAA/B,EAAD,CAAQjC,SAAS,WAEnBlH,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,yBACAxL,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAACiM,GAAD,CAAcxB,KAAMA,MAIzBA,EAAKtH,MACJnD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,CAAYlI,SAAUA,GACpBtD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAACkM,EAAA/C,EAAD,CAAMjC,SAAS,WAEjBlH,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,aACAxL,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KAAiBf,EAAKtH,8BCtD5BgJ,GAAmBnM,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,QACf,SAAAwB,GAAC,MAAoB,WAAfA,EAAE8B,SAAwB,QAAU,KAD3B,UAEd,SAAA9B,GAAC,MAAoB,WAAfA,EAAE8B,SAAwB,GAAK,KAFvB,aAIbM,IAAatF,OAJA,iFA2GV8N,GAjGO,SAAAxE,GAAuD,IAApD6C,EAAoD7C,EAApD6C,KAAYrE,GAAwCwB,EAA9C5I,KAA8C4I,EAAxCxB,WAAWD,EAA6ByB,EAA7BzB,aAAc7C,EAAesE,EAAftE,SACtD+I,EAAgBC,IAAQ7B,EAAK8B,MAAO,SAAAC,GAAO,OAAIA,EAAQrJ,OACvDsJ,EAAsBzM,OAAO0M,KAAKL,GACrC1C,IAAI,SAAAgD,GAMH,MAAO,CAAEA,UAASJ,MALEF,EAAcM,GAASC,KAAK,SAACzD,EAAG0D,GAClD,OACE,IAAIC,KAAK,cAAgB3D,EAAEsC,OAAS,IAAIqB,KAAK,cAAgBD,EAAEpB,YAKpEmB,KAAK,SAACzD,EAAG0D,GAAJ,OAAU1D,EAAEoD,MAAMzC,OAAS+C,EAAEN,MAAMzC,SAE3C,OACE9J,OAAAyG,EAAA,EAAAzG,CAAA+J,EAAAZ,EAAAa,SAAA,KACGyC,EAAoB9C,IAAI,SAAAxG,GACvB,OACEnD,OAAAyG,EAAA,EAAAzG,CAACmM,GAAD,CAAqB7I,SAAUA,GAC7BtD,OAAAyG,EAAA,EAAAzG,CAAA,UAAKmD,EAAKwJ,SACTxJ,EAAKoJ,MAAM5C,IAAI,SAAA6C,GAAO,OACrBxM,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,CAAuBlI,SAAUA,GAC/BtD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,CAAYtI,KAAMsJ,EAAQtJ,KAAMI,SAAUA,IAC1CtD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,CACEtI,KAAMsJ,EAAQtJ,KACdI,SAAUA,EACVW,QAASuI,EAAQpM,cAAgBoM,EAAQrJ,MAAQ,KACjDnD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAAA,SAAIwM,EAAQ1M,QAEdE,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAAA,SAAOwM,EAAQf,MAAf,KACEe,EAAQd,IAAM,IAAM,IADtB,KAEIc,EAAQd,KAAO,MAEpBc,EAAQb,UACP3L,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACGgB,EAAQb,SACFa,EAAQb,SADd,YAEG,gBAGPa,EAAQpM,aACPJ,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAAA,OACEY,IAAGmM,GAGHlB,wBAAyB,CACvBC,OAAQU,EAAQpM,gBAKxBJ,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAAC+L,EAAD,CACEjM,MAAO0M,EAAQ1M,MACfoG,UAAWsG,EAAQf,OAASe,EAAQR,KACpC7F,aAAcA,EACdC,UAAWA,EACXpH,KAAMwN,EAAQxN,QAGjBwN,EAAQ9B,SACP1K,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,CAAgBlI,SAAUA,GACxBtD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAACkL,EAAA/B,EAAD,CAAQjC,SAAS,WAEnBlH,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,yBACAxL,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAACiM,GAAD,CAAcxB,KAAM+B,MAIzBA,EAAQrJ,MACPnD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,CAAYlI,SAAUA,GACpBtD,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KACExL,OAAAyG,EAAA,EAAAzG,CAACkM,EAAA/C,EAAD,CAAMjC,SAAS,WAEjBlH,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,aACAxL,OAAAyG,EAAA,EAAAzG,CAACwL,EAAA,EAAD,KAAiBgB,EAAQrJ,sWC3G/C,IAAM6J,GAAa,CACjBC,EAAG,CACD,CAAExB,MAAO,QAASC,IAAK,SACvB,CAAED,MAAO,QAASC,IAAK,SACvB,CAAED,MAAO,QAASC,IAAK,SACvB,CAAED,MAAO,QAASC,IAAK,SACvB,CAAED,MAAO,QAASC,IAAK,SACvB,CAAED,MAAO,QAASC,IAAK,SACvB,CAAED,MAAO,QAASC,IAAK,SACvB,CAAED,MAAO,QAASC,IAAK,WA2BrBwB,GAAWlN,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,+BAEG,SAAAwB,GAAC,MAAoB,QAAfA,EAAE8B,SAAqB,SAAW,OAF3C,IAGb,SAAA9B,GAAC,MAzBc,WAyBKA,EAAE8B,SAxBtBtD,OAAAiH,EAAA,8EASYrD,IAAatF,OATzB,2DAkBK,IAGQ,KAMX6O,GAAQ,SAAAxL,GAOO,IANJ4K,EAMI5K,EANJ4K,MACAa,EAKIzL,EALJyL,eACAC,EAII1L,EAJJ0L,UACA/J,EAGI3B,EAHJ2B,SACAgK,EAEI3L,EAFJ2L,aACAC,EACI5L,EADJ4L,UACIC,EACevF,mBAAS,IAApC7B,EADYoH,EAAA,GACDrH,EADCqH,EAAA,GAGbC,EAAkB,SAAA3G,GACtB4G,aAAU,YAAaC,KAAKC,UAAU9G,IACtCX,EAAaW,GACbsG,GAAkBA,EAAetG,IASnC,GANA+G,oBAAU,WACR,IAAMC,EAAmBC,aAAU,YAAaC,SAASC,QACnDC,EAAgBJ,EAAmBH,KAAKQ,MAAML,GAAoB,GACxE3H,EAAa+H,IACZ,IAECb,EACF,OACErN,OAAAyG,EAAA,EAAAzG,CAACkN,GAAD,CAAa5J,SAAUA,GACpBiJ,EAAM5C,IAAI,SAAAc,GAAI,OACbzK,OAAAyG,EAAA,EAAAzG,CAACoO,GAAD,CACElE,IAAQO,EAAK3K,MAAV,IAAmB2K,EAAKtH,KAC3BsH,KAAMA,EACNtE,aAAcsH,EACdrH,UAAWA,EACX9C,SAAUA,OAOpB,GAAIgK,EAAc,CAChB,IAAMe,EAAgB/B,IAAQC,EAAO,SAAA9B,GAAI,OAAIA,EAAKzL,OAClD,OAAOgB,OAAO0M,KAAK2B,GAChBzB,OACAjD,IAAI,SAAA2E,GAAQ,OACXtO,OAAAyG,EAAA,EAAAzG,CAAA,OAAKkK,IAAKoE,GACRtO,OAAAyG,EAAA,EAAAzG,CAAA,UAAKH,KAAUS,KAAKiG,KAAK,SAAAgI,GAAG,OAAIA,EAAIvP,OAASsP,IAAU/N,OACvDP,OAAAyG,EAAA,EAAAzG,CAACkN,GAAD,CAAa5J,SAAUA,GACpB+K,EAAcC,GACZ1B,KAAK,SAACzD,EAAG0D,GAAJ,OAAW1D,EAAEsC,MAAQoB,EAAEpB,MAAQ,GAAK,IACzC9B,IAAI,SAAAc,GAAI,OACPzK,OAAAyG,EAAA,EAAAzG,CAACoO,GAAD,CACElE,IAAQO,EAAK3K,MAAV,IAAmB2K,EAAKtH,KAC3BsH,KAAMA,EACNtE,aAAcsH,EACdrH,UAAWA,EACX9C,SAAUA,UAU1B,IA0CMkL,EAAiBlC,IA1CF,WACnB,IAAMmC,EAASzB,GAAWO,EAAUvO,MACpC,IAAKyP,EACH,OAAOlC,EAET,IAAImC,EAAW,GAkCf,OAjCAnC,EAAMoC,QAAQ,SAAAlE,GACZ,IAAMmE,EAAkBH,EAAOlI,KAAK,SAAAsI,GAAK,OAAIA,EAAMpD,QAAUhB,EAAKgB,QAC5DqD,EAAgBL,EAAOlI,KAAK,SAAAsI,GAAK,OAAIA,EAAMnD,MAAQjB,EAAKiB,MAC9D,GAAkB,UAAdjB,EAAKvH,OAAqB0L,GAAmBE,GAAgB,CAC/D,IAAMrD,EAAQmD,EACVA,EAAgBnD,MAChBqD,EAAcrD,MACZC,EAAMoD,EAAgBA,EAAcpD,IAAMkD,EAAgBlD,IAC1DqD,EAAgBL,EAASnI,KAAK,SAAAyI,GAAO,OAAIA,EAAQvD,QAAUA,IAC3DwD,EAAqBP,EAASQ,UAClC,SAAAF,GAAO,OAAIA,EAAQvD,QAAUA,IAE3BsD,EACFL,EAAQ,GAAA3H,OAAAoI,GACHT,EAASU,MAAM,EAAGH,IADf,CAAAjP,OAAAC,OAAA,GAGDyO,EAASO,GAHR,CAIJ1C,MAAK,GAAAxF,OAAAoI,GAAMT,EAASO,GAAoB1C,OAAnC,CAA0C9B,OAJ3C0E,GAMHT,EAASU,MAAMH,EAAqB,KAGzCP,EAASW,KAAK,CACZ5D,QACAC,MACA1M,KAAMyL,EAAKzL,KACXuN,MAAO,CAAC9B,UAIZiE,EAASW,KAAK5E,KAGXiE,EAGsBY,GAAgB,SAAA7E,GAAI,OAAIA,EAAKgB,QAC5D,OAAOzL,OAAO0M,KAAK8B,GAChB5B,OACAjD,IAAI,SAAA2E,GAAQ,OACXtO,OAAAyG,EAAA,EAAAzG,CAAA,OAAKkK,IAAKoE,GACRtO,OAAAyG,EAAA,EAAAzG,CAAA,UAAKsO,GACLtO,OAAAyG,EAAA,EAAAzG,CAACkN,GAAD,CAAa5J,SAAUA,GACpBkL,EAAeF,GAAU3E,IAAI,SAACc,EAAMZ,GAAP,OAC5BY,EAAK8B,MACHvM,OAAAyG,EAAA,EAAAzG,CAACuP,GAAD,CACErF,IAAG,GAAKL,EACRY,KAAMA,EACNtE,aAAcsH,EACdrH,UAAWA,EACX9C,SAAUA,IAGZtD,OAAAyG,EAAA,EAAAzG,CAACoO,GAAD,CACElE,IAAQO,EAAK3K,MAAV,IAAmB2K,EAAKtH,KAC3BsH,KAAMA,EACNtE,aAAcsH,EACdrH,UAAWA,EACX9C,SAAUA,WAiB1B6J,GAAMqC,aAAe,CACnBnC,WAAW,EACX/J,SAAU,OAGG6J,2HCrMTsC,EAAuBzP,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,CAAAe,KAAA,SAAAC,OAAA,+DAOvB0O,EAAuB1P,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,CAAAe,KAAA,SAAAC,OAAA,qDAQvB2O,EAAsB3P,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,aAAAvB,CAAA,oIASNa,IAAOhE,KATD,YAWhB+G,IAAatF,OAXG,8BAiBtBsR,EAAgB5P,OAAA0H,EAAA,EAAA1H,CAAA,UAAAuB,OAAA,aAAAvB,CAAA,CAAAe,KAAA,UAAAC,OAAA,yCA+BP6O,EAzBI,WACjB,OACE7P,OAAAyG,EAAA,EAAAzG,CAACyP,EAAD,KACEzP,OAAAyG,EAAA,EAAAzG,CAAC0P,EAAD,MACA1P,OAAAyG,EAAA,EAAAzG,CAAC2P,EAAD,KACE3P,OAAAyG,EAAA,EAAAzG,CAAA,sBACAA,OAAAyG,EAAA,EAAAzG,CAAA,KACE8P,KAAMjQ,IAAUE,MAAMX,SACtBmC,OAAO,SACPwO,IAAI,uBACJ/P,OAAAyG,EAAA,EAAAzG,CAAA,UAAKH,IAAUE,MAAMZ,QAEvBa,OAAAyG,EAAA,EAAAzG,CAAA,KACE8P,KAAMjQ,IAAUE,MAAMT,WACtBiC,OAAO,SACPwO,IAAI,uBACJ/P,OAAAyG,EAAA,EAAAzG,CAAA,UAAKH,IAAUE,MAAMV,UAEvBW,OAAAyG,EAAA,EAAAzG,CAAA,UAAKH,IAAUE,MAAMR,OAEvBS,OAAAyG,EAAA,EAAAzG,CAAC4P,EAAD,CAAkB3E,IAAKpL,IAAUE,MAAMG,SAAU8P,YAAY,mCC1D7DC,EAAyBjQ,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,4GAQFa,IAAOlD,YARL,qBASTkD,IAAOjD,SATE,KAYzBsS,EAAgBlQ,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,mEAIDqC,IAAQhE,OAJP,mCAKqC,EAAtBgE,IAAQnE,YALvB,oBAQhBiS,EAAiBnQ,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,UACXqC,IAAQjE,MADG,YAEViE,IAAQjE,MAFE,OAKjBgS,EAAS,CACb,CAAEC,GAAI,IAAKvQ,MAAO,kBAClB,CAAEuQ,GAAI,YAAavQ,MAAO,WAC1B,CAAEuQ,GAAI,aAAcvQ,MAAO,eAGvBwQ,EAAiBtQ,OAAA0H,EAAA,EAAA1H,CAAOuQ,IAAP,CAAAhP,OAAA,YAAAvB,CAAH,+BAEPqC,IAAQjE,MAFD,OA4BLoS,EAvBI,WACjB,OACExQ,OAAAyG,EAAA,EAAAzG,CAAA+J,EAAAZ,EAAAa,SAAA,KACEhK,OAAAyG,EAAA,EAAAzG,CAACiQ,EAAD,KACEjQ,OAAAyG,EAAA,EAAAzG,CAACkQ,EAAD,KACGE,EAAOzG,IAAI,SAAA8G,GAAK,OACfzQ,OAAAyG,EAAA,EAAAzG,CAACsQ,EAAD,CACEpG,IAAKuG,EAAMJ,GACXA,GAAII,EAAMJ,GACVK,YAAa,CACXC,aAAY,aAAe9P,IAAOhD,KAClC+S,aAAc,SAEfH,EAAM3Q,WAKfE,OAAAyG,EAAA,EAAAzG,CAACmQ,EAAD,QC9BSU,IAxBO,SAAAlP,GAAkC,IAA/BC,EAA+BD,EAA/BC,SAAUkP,EAAqBnP,EAArBmP,eACjC,OACE9Q,OAAAyG,EAAA,EAAAzG,CAAA,WACEA,OAAAyG,EAAA,EAAAzG,CAAC+Q,EAAA5H,EAAD,CACErJ,MAAOD,IAAUM,KAAKL,MACtBK,KAAM,CACJ,CACEY,KAAM,cACNiQ,QAASnR,IAAUM,KAAKC,aAE1B,CAAEW,KAAM,WAAYiQ,QAASnR,IAAUM,KAAKC,eAE9CJ,OAAAyG,EAAA,EAAAzG,CAAA,QACE8P,KAAK,+DACLC,IAAI,gBAGR/P,OAAAyG,EAAA,EAAAzG,CAACiR,EAAD,MACCrP,EACAkP,GAAkB9Q,OAAAyG,EAAA,EAAAzG,CAACkR,EAAD,gTCrBzB,IAAMC,EAASnR,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,CAAAe,KAAA,SAAAC,OAAA,sDAMToQ,EAAmB,SAAAzP,GAKnB,IAJJ0P,EAII1P,EAJJ0P,SACAC,EAGI3P,EAHJ2P,qBAEGzP,GACCF,EAFJ4P,qJAEIzP,CAAAH,EAAA,yDACJ,MAAiB,WAAb0P,EAEArR,OAAAyG,EAAA,EAAAzG,CAACmR,EAADnP,EAAA,GACMH,EADN,CAEE2P,QAAQ,cACRC,QAAQ,MACRC,MAAM,+BACN1R,OAAAyG,EAAA,EAAAzG,CAAA,KAAG2R,OAAO,OAAOC,YAAY,IAAIC,KAAK,OAAOC,SAAS,WACpD9R,OAAAyG,EAAA,EAAAzG,CAAA,KAAG+R,UAAU,qCACX/R,OAAAyG,EAAA,EAAAzG,CAAA,KAAG+R,UAAU,gIACX/R,OAAAyG,EAAA,EAAAzG,CAAA,WACE6R,KAAK,UACLE,UAAU,oFACVC,OAAO,yDAEThS,OAAAyG,EAAA,EAAAzG,CAAA,WACE6R,KAAK,UACLG,OAAO,4CAEThS,OAAAyG,EAAA,EAAAzG,CAAA,WACE6R,KAAK,UACLG,OAAO,uDASnBhS,OAAAyG,EAAA,EAAAzG,CAACmR,EAADnP,EAAA,GACMH,EADN,CAEE2P,QAAQ,cACRC,QAAQ,MACRC,MAAM,+BACN1R,OAAAyG,EAAA,EAAAzG,CAAA,KAAG2R,OAAO,OAAOC,YAAY,IAAIC,KAAK,OAAOC,SAAS,WACpD9R,OAAAyG,EAAA,EAAAzG,CAAA,KAAG+R,UAAU,oCACX/R,OAAAyG,EAAA,EAAAzG,CAAA,KAAG+R,UAAU,mCACX/R,OAAAyG,EAAA,EAAAzG,CAAA,WACE6R,KAAK,UACLE,UAAU,oFACVC,OAAO,gEAEThS,OAAAyG,EAAA,EAAAzG,CAAA,WAAS6R,KAAK,UAAUG,OAAO,gCAC/BhS,OAAAyG,EAAA,EAAAzG,CAAA,WACE6R,KAAMP,GAAwB,UAC9BU,OAAO,2CAerBZ,EAAiB5B,aAAe,CAC9B6B,SAAU,OAGGD,kPCzEf,IAAMa,EAAajS,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,oBACG,SAAAwB,GAAC,OAAIA,EAAEW,iBAAmBtB,IAAO9C,aADpC,eAEH,SAAAyD,GAAC,OAAIA,EAAE0Q,WAAa,QAFjB,UAGR,SAAA1Q,GAAC,OAAIA,EAAE2Q,OAAStR,IAAOjD,UAHf,KAKbwU,EAAkBpS,OAAA0H,EAAA,EAAA1H,CAAA,OAAAuB,OAAA,YAAAvB,CAAA,+BAER,SAAAwB,GAAC,OAAIA,EAAE0Q,WAAa,QAFZ,YAGZtO,IAAanF,QAHD,4BAOZmF,IAAatF,OAPD,eAQP+D,IAAQ9D,MARD,MAYlB8T,EAAiB,SAAA1Q,GAQjB,IAPJ2Q,EAOI3Q,EAPJ2Q,iBACAC,EAMI5Q,EANJ4Q,oBACAjB,EAKI3P,EALJ2P,qBACAC,EAII5P,EAJJ4P,iBACAW,EAGIvQ,EAHJuQ,UACAtQ,EAEID,EAFJC,SACGC,sIACC2Q,CAAA7Q,EAAA,6GACJ,OACE3B,OAAAyG,EAAA,EAAAzG,CAACyS,EAAA,SAAD,KACEzS,OAAAyG,EAAA,EAAAzG,CAACiS,EAADS,EAAA,CAAeR,UAAWA,GAAerQ,GACtCyQ,GACCtS,OAAAyG,EAAA,EAAAzG,CAAC2S,EAAD,CACErB,qBAAsBA,EACtBC,iBAAkBA,EAClBF,SAAS,QAGbrR,OAAAyG,EAAA,EAAAzG,CAACoS,EAAD,CAAoBF,UAAWA,GAC5BtQ,GAEF2Q,GACCvS,OAAAyG,EAAA,EAAAzG,CAAC2S,EAAD,CACErB,qBAAsBA,EACtBC,iBAAkBA,EAClBF,SAAS,cAQrBgB,EAAe7C,aAAe,CAC5B8C,kBAAkB,EAClBC,qBAAqB,GAWRF,4bClETO,EAAY,SAACC,GAAD,gBAACA,MAAatW,IAAUI,SAAxBgF,GA+BH4O,IApBE,SAAA3I,GAA2C,IAAxCyI,EAAwCzI,EAAxCyI,GAAIzO,EAAoCgG,EAApChG,SAAUiR,EAA0BjL,EAA1BiL,WAAehR,sIAAWC,CAAA8F,EAAA,gCAC1D,OAAIyI,EAEArQ,OAAAuC,EAAA,EAAAvC,CAAC8S,EAAA3J,EAADnH,EAAA,CAAMqO,GAAIA,EAAIzP,IAAKgS,EAAUC,IAAiBhR,GAC3CD,GAKL5B,OAAAuC,EAAA,EAAAvC,CAAA,IAAAgC,EAAA,CAAGpB,IAAKgS,GAAe/Q,GACpBD,gHC3BM8L,EAAY,SAAC3M,EAAMgS,EAAOC,GACrC,IAAIC,EACJ,GAAID,EACFC,EAAU,oCACL,CACL,IAAM5W,EAAI,IAAIyQ,KACdzQ,EAAE6W,QAAQ7W,EAAE8W,UAAY,WACxBF,EAAO,WAAc5W,EAAE+W,cAEzBpF,SAASC,OAAYlN,EAArB,IAA6BsS,mBAAmBN,GAAhD,KAA2DE,EAA3D,YAGWlF,EAAY,SAAChN,EAAMuS,GAC9B,IACMC,GADK,KAAQC,mBAAmBF,IACZ5J,MAAN,KAAiB3I,EAAjB,KACpB,OAAIwS,EAAYzJ,OAAS,EAChByJ,EACJE,MACA/J,MAAM,KACNgK,QAEE","file":"1-42e3182c15ed91ae0c86.js","sourcesContent":["import darken from 'polished/lib/color/darken';\n\nconst greyLight = '#e8e3e3';\nconst greyLightest = '#f8f8f8';\n\nexport const oldColors = {\n  primary: '#007bba',\n  secondary: '#28334A',\n  grey: '#777777',\n  greyLight: greyLight,\n  greyLighter: '#eff0f2',\n  greyLightest: greyLightest,\n  greyDark: '#4d4d4d',\n\n  background: {\n    default: '#ffffff',\n    dark: darken(0.1, '#ffffff'),\n    darker: darken(0.2, '#ffffff'),\n    backgroundGray: greyLightest,\n    grayDark: '#e4e4e4',\n  },\n  knowit: {\n    green: '#49b0a4',\n  },\n};\n\nexport default {\n  blueDarkest: '#202736',\n  blueDark: '#28334a',\n  blue: '#3177f8',\n  blueLight: '#34c6fc',\n  blueLighest: '#b4eaf4',\n  green: '#339037',\n  grey: '#8b98a4',\n  yellow: '#ffff70',\n  heartRed: '#e95971',\n};\n","const spacingUnit = 16;\n\nexport default {\n  spacingUnit,\n  xsmall: `${spacingUnit / 4}px`,\n  small: `${spacingUnit / 2}px`,\n  normal: `${spacingUnit}px`,\n  medium: `${spacingUnit * 1.5}px`,\n  large: `${spacingUnit * 2}px`,\n  xlarge: `${spacingUnit * 2.5}px`,\n  xxlarge: `${spacingUnit * 3}px`,\n};\n","export default {\n  xxlarge: 'min-width: 1800px',\n  xlarge: 'min-width: 1200px',\n  large: 'min-width: 800px',\n  medium: 'max-width: 800px',\n  small: 'max-width: 600px',\n  xsmall: 'max-width: 400px',\n};\n","export const villages = [];\n\nconst year = '2019';\nconst season = {\n  short: 'høst',\n  shortCapitalized: 'Høst',\n  long: 'høsten',\n  longCapitalized: 'Høsten',\n};\nconst startDate = '31. oktober';\nconst endDate = '3. november';\n\nexport const eventData = {\n  date: `${startDate} - ${endDate} ${year}`,\n  longDate: `${startDate} - ${endDate} ${year}`,\n  venue: 'Hotel NH Amsterdam Centre',\n  venueUrl: 'https://g.page/NHAmsterdamCentre',\n  address: 'Stadhouderskade 7',\n  addressUrl: 'https://goo.gl/maps/h7tCL8JE2qFNiKuY7',\n  city: 'Amsterdam',\n  country: 'Nederland',\n  year,\n  monthNumber: 10,\n  season,\n  startDate,\n  endDate,\n  cities: [\n    'Berlin',\n    'København',\n    'Madrid',\n    'Svalbard',\n    'Reykjavik',\n    'Praha',\n  ],\n};\n\nconst viewmodel = {\n  title: `Fagseminar ${eventData.season.longCapitalized} ${eventData.year}`,\n  event: {\n    ...eventData,\n    gmapsUrl:\n      'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2436.411401630002!2d4.87751221580164!3d52.36295987978485!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47c609e61695c79d%3A0xa9a7aa7ec8fa5ea1!2sHotel%20NH%20Amsterdam%20Centre!5e0!3m2!1sen!2sno!4v1570529514760!5m2!1sen!2sno',\n  },\n  meta: {\n    title: `Knowit Stavanger Fagseminar ${eventData.year}`,\n    description: `Knowit Stavanger arrangerer to fagseminarer årlig. Det er de ansatte selv som lager programmet. ${season.longCapitalized} ${year} vil den bli avholdt ${eventData.date} i ${eventData.city}, ${eventData.country}.`,\n    keywords: `Fagseminar, ${eventData.city}, ${eventData.country}, Fag, Foredrag`,\n  },\n  days: [\n    {\n      date: '31',\n      label: 'Torsdag 31.10',\n    },\n    {\n      date: '1',\n      label: 'Fredag 1.11',\n    },\n    {\n      date: '2',\n      label: 'Lørdag 2.11',\n    },\n    {\n      date: '3',\n      label: 'Søndag 3.11',\n    },\n  ],\n  schedules: [],\n  talks: {},\n  villages: [],\n};\n\nexport default viewmodel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport colors from '../util/colors';\nimport darken from 'polished/lib/color/darken';\n\nconst hoverStyle = css`\n  background-color: ${darken(0.1, colors.blue)};\n  border: 1px solid ${darken(0.1, colors.blue)};\n  color: white;\n`;\n\nconst strippedStyle = css`\n  transition: background-color none;\n  padding: 0;\n  border-radius: 0;\n  font-size: 1em;\n  color: inherit;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  display: inline-block;\n  box-shadow: none;\n`;\n\nconst appearances = {\n  stripped: css`\n    ${strippedStyle};\n    &:hover,\n    &:focus {\n      ${strippedStyle};\n    }\n  `,\n  outline: css`\n    background-color: white;\n    color: ${colors.blue};\n\n    &:hover,\n    &:focus {\n      background-color: ${colors.blue};\n      border-color: ${colors.blue};\n      color: white;\n    }\n  `,\n  active: hoverStyle,\n};\nexport const StyledButton = styled.button`\n  padding: 0.8rem 3rem;\n  background-color: ${colors.blue};\n  border: 1px solid ${colors.blue};\n  color: white;\n  font-size: 1.2rem;\n  font-weight: 100;\n  font-family: 'Raleway', sans-serif;\n  border-radius: 30px;\n  &:hover,\n  &:focus {\n    ${hoverStyle};\n  }\n  ${p => p.appearance && appearances[p.appearance]};\n}\n`;\n\nconst Button = ({ appearance, children, ...rest }) => (\n  <StyledButton appearance={appearance} {...rest}>\n    {children}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  appearance: PropTypes.string,\n  arrowBottom: PropTypes.bool,\n};\n\nexport default Button;\n","import React, { Fragment } from 'react';\nimport styled from '@emotion/styled';\nimport { Global, css } from '@emotion/core';\nimport colors from '../util/colors';\nimport spacing from '../util/spacing';\n\nconst StyledContent = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column;\n  background-color: ${p => p.backgroundColor || 'white'};\n`;\n\nconst globalStyles = css`\n  html,\n  body {\n    font-size: 16px;\n    color: ${colors.blueDark};\n    word-spacing: ${spacing.spacingUnit / 6}px;\n  }\n\n  body {\n    margin: 0;\n    font-family: 'Raleway', sans-serif;\n  }\n\n  .c-schedule-transition-enter {\n    opacity: 0.01;\n  }\n\n  .c-schedule-transition-enter.c-schedule-transition-enter-active {\n    opacity: 1;\n    transition: opacity 500ms ease-in;\n  }\n\n  .c-schedule-transition-leave {\n    opacity: 1;\n  }\n\n  .c-schedule-transition-leave.c-schedule-transition-leave-active {\n    opacity: 0.01;\n    transition: opacity 300ms ease-in;\n  }\n  a {\n    -webkit-tap-highlight-color: transparent;\n  }\n`;\n\nconst Content = ({ children, ...rest }) => (\n  <Fragment>\n    <Global styles={globalStyles} />\n    <StyledContent {...rest}>{children}</StyledContent>\n  </Fragment>\n);\n\nexport default Content;\n","import styled from '@emotion/styled';\nimport css from '@emotion/css';\nimport colors from '../../util/colors';\nimport mediaQueries from '../../util/mediaQueries';\nimport spacing from '../../util/spacing';\n\nexport const typeColors = {\n  common: colors.blueDark,\n  dev: colors.green,\n  digi: colors.blue,\n};\n\nconst gridTemplates = {\n  dev: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 10% 78% 10%;\n      grid-template-areas:\n        'time     title       favorite'\n        'duration description favorite'\n        '.        speakers    speakers'\n        '.        room        room';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time        favorite'\n        'duration    favorite'\n        'title       title'\n        'description description'\n        'speakers    speakers'\n        'room        room';\n    `,\n  },\n  digi: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 10% 78% 10%;\n      grid-template-areas:\n        'time     title       favorite'\n        'duration description favorite'\n        '.        speakers    speakers'\n        '.        room        room';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time        favorite'\n        'duration    favorite'\n        'title       title'\n        'description description'\n        'speakers    speakers'\n        'room        room';\n    `,\n  },\n  common: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 10% 78% 10%;\n      grid-template-areas:\n        'time     title       favorite'\n        'duration description favorite'\n        '.        speakers    speakers'\n        '.        room        room';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time        favorite'\n        'duration    favorite'\n        'title       title'\n        'description description'\n        'speakers    speakers'\n        'room        room';\n    `,\n  },\n  keynote: {\n    desktop: css`\n      grid-template-rows: auto auto auto;\n      grid-template-columns: 10% 78% 10%;\n      align-items: center;\n      grid-template-areas:\n        'time title favorite'\n        'time    title       favorite'\n        '.       description description'\n        '.       room        room';\n    `,\n    mobile: css`\n      grid-template-rows: auto auto auto auto auto;\n      grid-template-columns: 70% 30%;\n      grid-template-areas:\n        'time        favorite'\n        '.           favorite'\n        'title       title'\n        'description description'\n        'room        room';\n    `,\n  },\n};\n\nconst responsiveStyles = {\n  type: {\n    desktop: css`\n      border-top-left-radius: 5px;\n      border-bottom-left-radius: 5px;\n    `,\n    mobile: css`\n      border-bottom-left-radius: 0;\n      border-top-right-radius: 5px;\n      border-top-left-radius: 5px;\n    `,\n  },\n  room: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 30px 190px auto;\n      grid-template-areas: 'roomIcon roomLabel roomName';\n    `,\n    mobile: css`\n      grid-template-rows: 30px auto;\n      grid-template-columns: 30px auto;\n      grid-template-areas:\n        'roomIcon roomLabel'\n        'roomIcon roomName';\n    `,\n  },\n  speakers: {\n    desktop: css`\n      grid-template-rows: auto;\n      grid-template-columns: 30px 190px auto;\n      grid-template-areas: 'speakerIcon speakerLabel speakerName';\n    `,\n    mobile: css`\n      grid-template-rows: 30px auto;\n      grid-template-columns: 30px auto;\n      grid-template-areas:\n        'speakerIcon speakerLabel'\n        'speakerIcon speakerName';\n    `,\n  },\n};\n\nconst getViewTypeForDesktop = viewType =>\n  viewType === 'row' ? 'desktop' : 'mobile';\n\nconst getStyledSlotGridWrapperStyle = (viewType, isMobile = false) => {\n  if (viewType === 'column' || isMobile) {\n    return css`\n      margin: ${spacing.small} 0;\n      margin-right: ${viewType === 'column' && !isMobile && spacing.normal};\n      grid-template-rows: ${spacing.small} auto;\n      grid-template-columns: 100%;\n      grid-template-areas:\n        'type'\n        'allContent';\n    `;\n  }\n  return css`\n    margin-top: ${spacing.large};\n    grid-template-rows: auto;\n    grid-template-columns: ${spacing.small} auto;\n    grid-template-areas: 'type allContent';\n\n    &:last-child {\n      margin-bottom: ${spacing.large};\n    }\n  `;\n};\nexport const StyledSlotGridWrapper = styled.div`\n  display: grid;\n  background-color: white;\n  border-radius: 5px;\n  ${p => getStyledSlotGridWrapperStyle(p.viewType, false)};\n\n  @media (${mediaQueries.medium}) {\n    ${p => getStyledSlotGridWrapperStyle(p.viewType, true)};\n  }\n`;\n\nconst getSlotGridStyle = (type, viewType, isMobile = false) => {\n  const desktopOrMobile =\n    viewType === 'column' || isMobile ? 'mobile' : 'desktop';\n  if (type) {\n    return gridTemplates[type][desktopOrMobile];\n  }\n  return gridTemplates.other[desktopOrMobile];\n};\n\nexport const StyledSlotGrid = styled.div`\n  display: grid;\n  grid-area: allContent;\n  padding: ${spacing.normal};\n  grid-row-gap: ${p => p.rowGap || spacing.small};\n  grid-column-gap: ${spacing.normal};\n  ${p => getSlotGridStyle(p.type, p.viewType, false)};\n  & b {\n    font-weight: 900;\n  }\n\n  @media (${mediaQueries.medium}) {\n    ${p => getSlotGridStyle(p.type, p.viewType, true)};\n  }\n`;\n\nexport const StyledType = styled.div`\n  grid-area: type;\n  background-color: ${p => (p.type ? typeColors[p.type] : typeColors.other)};\n  border: 1px solid ${p => (p.type ? typeColors[p.type] : typeColors.other)};\n  ${p => responsiveStyles.type[getViewTypeForDesktop(p.viewType)]}\n  \n  @media (${mediaQueries.medium}) {\n    ${responsiveStyles.type.mobile}\n\n  }\n`;\n\nexport const StyledTime = styled.div`\n  grid-area: time;\n`;\n\nexport const StyledTitle = styled.div`\n  grid-area: title;\n`;\n\nexport const StyledFavorite = styled.div`\n  grid-area: favorite;\n  justify-self: right;\n`;\n\nexport const StyledDuration = styled.div`\n  grid-area: duration;\n`;\n\nexport const StyledRoom = styled.div`\n  grid-area: room;\n  display: grid;\n  ${p => responsiveStyles.room[getViewTypeForDesktop(p.viewType)]}\n\n  @media (${mediaQueries.medium}) {\n    ${responsiveStyles.room.mobile}\n  }\n`;\n\nexport const StyledRoomLabel = styled.div`\n  grid-area: roomLabel;\n  display: flex;\n\n  & > svg {\n    padding-right: ${spacing.small};\n    color: ${colors.grey};\n  }\n`;\n\nexport const StyledRoomIcon = styled.div`\n  grid-area: roomIcon;\n`;\nexport const StyledRoomName = styled.b`\n  grid-area: roomName;\n`;\n\nexport const StyledDescription = styled.div`\n  grid-area: description;\n  display: flex;\n`;\n\nexport const StyledSpeakers = styled.div`\n  grid-area: speakers;\n  display: grid;\n  grid-auto-rows: min-content;\n  ${p => responsiveStyles.speakers[getViewTypeForDesktop(p.viewType)]}\n\n  @media (${mediaQueries.medium}) {\n    ${responsiveStyles.speakers.mobile}\n  }\n`;\n\nexport const StyledUserIcon = styled.div`\n  grid-area: speakerIcon;\n`;\n\nexport const StyledUserLabel = styled.div`\n  grid-area: speakerLabel;\n  display: flex;\n  & > svg {\n    padding-right: ${spacing.small};\n    color: ${colors.grey};\n  }\n`;\n\nexport const StyledUserName = styled.b`\n  grid-area: speakerName;\n  & button {\n    text-align: left;\n  }\n`;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const fetchSlots = () => {\n  const data = useStaticQuery(graphql`\n      query data {\n          allAirtable {\n              edges {\n                  node {\n                      data {\n                          title\n                          userIds\n                          email\n                          description\n                          type\n                          start\n                          end\n                          date\n                          duration\n                          room\n                          speaker_bio\n                          speaker_favourites\n                          speaker_recreation\n                          speaker_image {\n                              localFiles {\n                                  publicURL\n                              }\n                          }\n                      }\n                  }\n              }\n          }\n      }\n  `);\n  const slots =\n    data && data.allAirtable && data.allAirtable.edges\n      ? data.allAirtable.edges.flatMap(edge => edge.node.data)\n      : [];\n  return slots;\n};\n","import React from 'react';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport colors from '../../util/colors';\nimport Button from '../Button';\nimport css from '@emotion/css';\nimport spacing from '../../util/spacing';\nimport styled from '@emotion/styled-base';\n\nconst StyledFavoriteIcon = styled(FavoriteIcon)`\n  color: ${colors.heartRed};\n`;\n\nconst StyledFavoriteText = styled('b')`\n  display: block;\n`;\n\nconst StyledFavoriteBorder = styled(FavoriteBorder)`\n  color: ${colors.grey};\n\n  &:hover,\n  &:focus {\n    color: ${colors.heartRed};\n  }\n`;\n\nconst AddFavorite = ({ title, date, startTime, setFavorites, favorites }) => {\n  const uniqueSlotIdentifier = `${date}_${startTime}_${title}`;\n  const isFavoriteActive = !!favorites.find(\n    fav => fav === uniqueSlotIdentifier,\n  );\n  const changeFavorites = () => {\n    if (isFavoriteActive) {\n      const updatedCookie = favorites.filter(\n        favorite => favorite !== uniqueSlotIdentifier,\n      );\n      setFavorites(updatedCookie);\n    } else {\n      const newFavorites = [...favorites, uniqueSlotIdentifier];\n      setFavorites(newFavorites);\n    }\n  };\n\n  return (\n    <Button\n      appearance=\"stripped\"\n      onClick={changeFavorites}\n      css={css`\n        margin-right: ${spacing.small};\n      `}>\n      {isFavoriteActive ? (\n        <StyledFavoriteIcon fontSize=\"large\" />\n      ) : (\n        <StyledFavoriteBorder fontSize=\"large\" />\n      )}\n      <StyledFavoriteText>\n        {isFavoriteActive ? 'Fjern' : 'Lagre'}\n      </StyledFavoriteText>\n    </Button>\n  );\n};\n\nexport default AddFavorite;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '../Button';\nimport css from '@emotion/css';\nimport colors from '../../util/colors';\nimport spacing from '../../util/spacing';\nimport styled from '@emotion/styled';\nimport mediaQueries from '../../util/mediaQueries';\nimport Close from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    margin: '0 auto',\n  },\n}));\n\nconst StyledModal = styled.div`\n  max-width: 60%;\n  width: 60%;\n  overflow-y: auto;\n  background-color: white;\n  padding: ${spacing.normal};\n  max-height: 80vh;\n  height: fit-content;\n  margin: 0 auto;\n\n  @media (${mediaQueries.medium}) {\n    max-width: 100%;\n    width: 100%;\n    max-height: 100vh;\n  }\n`;\n\nconst SpeakerModal = ({ children, buttonText }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        css={css`\n          color: ${colors.blue};\n          text-decoration: underline;\n\n          &:hover,\n          &:focus {\n            color: ${colors.blueDark};\n          }\n        `}\n        appearance=\"stripped\"\n        onClick={handleOpen}>\n        {buttonText}\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <StyledModal>\n            <Button\n              css={css`\n                float: right;\n              `}\n              onClick={handleClose}\n              appearance=\"stripped\">\n              <Close />\n            </Button>\n            {children}\n          </StyledModal>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default SpeakerModal;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport css from '@emotion/css';\nimport spacing from '../../util/spacing';\n\nconst StyledSpeakerFavourites = styled.div`\n  align-self: start;\n  margin: 0;\n  flex: 1;\n  margin-right: ${spacing.normal};\n\n  & > h2 {\n    margin-left: 0;\n  }\n`;\n\nconst StyledList = styled.ul`\n  margin: 0;\n`;\n\nconst favouriteCategories = [\n  'Mat',\n  'Musikksjanger',\n  'Reisemål',\n  'Film/serie',\n  'Sted',\n];\n\nconst SpeakerFavourites = ({ speaker_favourites }) => {\n  if (!speaker_favourites) {\n    return null;\n  }\n  const splittedFavourites = speaker_favourites\n    .split(';')\n    .map((favourite, index) => {\n      if (favourite.length === 0) {\n        return null;\n      }\n      return (\n        <>\n          <strong>{`${favouriteCategories[index]}: `}</strong>\n          <span>{favourite}</span>\n        </>\n      );\n    })\n    .filter(favourite => favourite);\n  return (\n    <StyledSpeakerFavourites>\n      <h2\n        css={css`\n          padding-left: 0;\n        `}>\n        Hva liker du?\n      </h2>\n      <StyledList>\n        {splittedFavourites.map((favourite, index) => (\n          <li key={`favourite_${index}`}>{favourite}</li>\n        ))}\n      </StyledList>\n    </StyledSpeakerFavourites>\n  );\n};\n\nexport default SpeakerFavourites;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Person from '@material-ui/icons/Person';\nimport mediaQueries from '../../util/mediaQueries';\nimport SpeakerFavourites from './SpeakerFavourites';\n\nconst StyledSpeakerContainer = styled.div`\n  display: grid;\n  align-content: start;\n  grid-template-rows: max-content auto auto;\n  grid-template-columns: 30% 35% 35%;\n  align-items: center;\n  grid-template-areas:\n    'image title   title '\n    'image content content';\n\n  @media (${mediaQueries.medium}) {\n    display: grid;\n    grid-template-rows: auto auto auto;\n    grid-template-columns: 100%;\n    align-items: center;\n    grid-template-areas:\n      'image'\n      'title'\n      'content';\n  }\n`;\n\nconst StyledTitle = styled.h2`\n  grid-area: title;\n  align-self: start;\n  margin-top: 0;\n`;\n\nconst StyledDescription = styled.span`\n  align-self: start;\n  flex: 0 0 100%;\n`;\n\nconst StyledSpeakerRecreation = styled.span`\n  align-self: start;\n  flex: 1;\n`;\n\nconst StyledImage = styled.img`\n  grid-area: image;\n  max-width: 75%;\n  align-self: start;\n\n  @media (${mediaQueries.medium}) {\n    max-width: 100%;\n  }\n`;\n\nconst StyledIcon = styled.span`\n  grid-area: image;\n  align-self: start;\n  & > svg {\n    font-size: 15rem;\n  }\n\n  @media (${mediaQueries.medium}) {\n    & > svg {\n      display: none;\n    }\n  }\n`;\n\nconst StyledContent = styled.div`\n  grid-area: content;\n  align-self: start;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst Speaker = ({\n  slot: {\n    userIds,\n    speaker_bio,\n    speaker_image,\n    speaker_favourites,\n    speaker_recreation,\n  },\n}) => {\n  const imageUrl =\n    speaker_image &&\n    speaker_image.localFiles &&\n    speaker_image.localFiles[0] &&\n    speaker_image.localFiles[0].publicURL;\n  return (\n    <StyledSpeakerContainer>\n      {imageUrl ? (\n        <StyledImage src={imageUrl} />\n      ) : (\n        <StyledIcon>\n          <Person fontSize=\"large\" />\n        </StyledIcon>\n      )}\n      <StyledTitle>{userIds}</StyledTitle>\n      <StyledContent>\n        <StyledDescription>\n          {speaker_bio ||\n            'Vi har dessverre ingen beskrivelse på denne personen :('}\n        </StyledDescription>\n        <SpeakerFavourites speaker_favourites={speaker_favourites} />\n        {speaker_recreation && (\n          <StyledSpeakerRecreation>\n            <h2>Hva gjør du på fritida?</h2>\n            <p>{speaker_recreation}</p>\n          </StyledSpeakerRecreation>\n        )}\n      </StyledContent>\n    </StyledSpeakerContainer>\n  );\n};\n\nexport default Speaker;\n","import SpeakerModal from './SpeakerModal';\nimport Speaker from './Speaker';\n\nexport { SpeakerModal };\n\nexport default Speaker;\n","import React from 'react';\nimport Speaker, { SpeakerModal } from '../Speaker';\n\nconst SlotSpeakers = ({ slot }) => (\n  <SpeakerModal buttonText={slot.userIds}>\n    <Speaker slot={slot} />\n  </SpeakerModal>\n);\n\nexport default SlotSpeakers;\n","import Slot from './Slot';\n\nexport default Slot;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/core';\nimport Home from '@material-ui/icons/Home';\nimport Person from '@material-ui/icons/Person';\nimport AddFavorite from '../Favorites/AddFavorite';\nimport {\n  StyledSlotGridWrapper,\n  StyledSlotGrid,\n  StyledTitle,\n  StyledType,\n  StyledDescription,\n  StyledSpeakers,\n  StyledFavorite,\n  StyledRoom,\n  StyledDuration,\n  StyledTime,\n  StyledUserName,\n  StyledUserLabel,\n  StyledRoomLabel,\n  StyledRoomName,\n  StyledRoomIcon,\n  StyledUserIcon,\n} from './SlotStyles';\nimport SlotSpeakers from './SlotSpeakers';\n\nconst Slot = ({ slot, date, favorites, setFavorites, viewType }) => {\n  return (\n    <StyledSlotGridWrapper viewType={viewType}>\n      <StyledType type={slot.type} viewType={viewType} />\n      <StyledSlotGrid\n        type={slot.type}\n        viewType={viewType}\n        rowGap={!slot.description && !slot.room && '0'}>\n        <StyledTitle>\n          <b>{slot.title}</b>\n        </StyledTitle>\n        <StyledTime>\n          <b>{`${slot.start} ${slot.end ? '-' : ''} ${slot.end || ''}`}</b>\n        </StyledTime>\n        {slot.duration && (\n          <StyledDuration>\n            {slot.duration ? `${slot.duration} minutter` : 'Ikke oppgitt'}\n          </StyledDuration>\n        )}\n        {slot.description && (\n          <StyledDescription>\n            <div\n              css={css`\n                display: inline-block;\n              `}\n              dangerouslySetInnerHTML={{\n                __html: slot.description,\n              }}\n            />\n          </StyledDescription>\n        )}\n        <StyledFavorite>\n          <AddFavorite\n            title={slot.title}\n            startTime={slot.start || slot.time}\n            setFavorites={setFavorites}\n            favorites={favorites}\n            date={slot.date}\n          />\n        </StyledFavorite>\n        {slot.userIds && (\n          <StyledSpeakers viewType={viewType}>\n            <StyledUserIcon>\n              <Person fontSize=\"small\" />\n            </StyledUserIcon>\n            <StyledUserLabel>Foredragsholdere</StyledUserLabel>\n            <StyledUserName>\n              <SlotSpeakers slot={slot} />\n            </StyledUserName>\n          </StyledSpeakers>\n        )}\n        {slot.room && (\n          <StyledRoom viewType={viewType}>\n            <StyledRoomIcon>\n              <Home fontSize=\"small\" />\n            </StyledRoomIcon>\n            <StyledRoomLabel>Rom:</StyledRoomLabel>\n            <StyledRoomName>{slot.room}</StyledRoomName>\n          </StyledRoom>\n        )}\n      </StyledSlotGrid>\n    </StyledSlotGridWrapper>\n  );\n};\n\nSlot.propTypes = {\n  slot: PropTypes.object,\n  viewType: PropTypes.string,\n};\n\nexport default Slot;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/core';\nimport Home from '@material-ui/icons/Home';\nimport Person from '@material-ui/icons/Person';\nimport AddFavorite from '../Favorites/AddFavorite';\nimport {\n  StyledSlotGridWrapper,\n  StyledSlotGrid,\n  StyledTitle,\n  StyledType,\n  StyledDescription,\n  StyledSpeakers,\n  StyledFavorite,\n  StyledRoom,\n  StyledDuration,\n  StyledTime,\n  StyledUserName,\n  StyledUserLabel,\n  StyledRoomLabel,\n  StyledRoomName,\n  StyledRoomIcon,\n  StyledUserIcon,\n} from './SlotStyles';\nimport SlotSpeakers from './SlotSpeakers';\nimport styled from '@emotion/styled';\nimport groupBy from 'lodash/groupBy';\nimport mediaQueries from '../../util/mediaQueries';\n\nconst StyledSlotWithRooms = styled.div`\n  flex: ${p => (p.viewType === 'column' ? '1 28%' : '1')};\n  width: ${p => (p.viewType === 'column' ? 28 : 100)}%;\n\n  @media (${mediaQueries.medium}) {\n    flex: 1 100%;\n    width: 100%;\n  }\n`;\n\nconst SlotsWithRoom = ({ slot, date, favorites, setFavorites, viewType }) => {\n  const groupedByRoom = groupBy(slot.slots, subSlot => subSlot.room);\n  const sortedRoomsByLength = Object.keys(groupedByRoom)\n    .map(roomKey => {\n      const sortedSlots = groupedByRoom[roomKey].sort((a, b) => {\n        return (\n          new Date('1970/01/01 ' + a.start) - new Date('1970/01/01 ' + b.start)\n        );\n      });\n      return { roomKey, slots: sortedSlots };\n    })\n    .sort((a, b) => a.slots.length - b.slots.length);\n\n  return (\n    <>\n      {sortedRoomsByLength.map(room => {\n        return (\n          <StyledSlotWithRooms viewType={viewType}>\n            <h3>{room.roomKey}</h3>\n            {room.slots.map(subSlot => (\n              <StyledSlotGridWrapper viewType={viewType}>\n                <StyledType type={subSlot.type} viewType={viewType} />\n                <StyledSlotGrid\n                  type={subSlot.type}\n                  viewType={viewType}\n                  rowGap={!subSlot.description && !subSlot.room && '0'}>\n                  <StyledTitle>\n                    <b>{subSlot.title}</b>\n                  </StyledTitle>\n                  <StyledTime>\n                    <b>{`${subSlot.start} ${\n                      subSlot.end ? '-' : ''\n                    } ${subSlot.end || ''}`}</b>\n                  </StyledTime>\n                  {subSlot.duration && (\n                    <StyledDuration>\n                      {subSlot.duration\n                        ? `${subSlot.duration} minutter`\n                        : 'Ikke oppgitt'}\n                    </StyledDuration>\n                  )}\n                  {subSlot.description && (\n                    <StyledDescription>\n                      <div\n                        css={css`\n                          display: inline-block;\n                        `}\n                        dangerouslySetInnerHTML={{\n                          __html: subSlot.description,\n                        }}\n                      />\n                    </StyledDescription>\n                  )}\n                  <StyledFavorite>\n                    <AddFavorite\n                      title={subSlot.title}\n                      startTime={subSlot.start || subSlot.time}\n                      setFavorites={setFavorites}\n                      favorites={favorites}\n                      date={subSlot.date}\n                    />\n                  </StyledFavorite>\n                  {subSlot.userIds && (\n                    <StyledSpeakers viewType={viewType}>\n                      <StyledUserIcon>\n                        <Person fontSize=\"small\" />\n                      </StyledUserIcon>\n                      <StyledUserLabel>Foredragsholdere</StyledUserLabel>\n                      <StyledUserName>\n                        <SlotSpeakers slot={subSlot} />\n                      </StyledUserName>\n                    </StyledSpeakers>\n                  )}\n                  {subSlot.room && (\n                    <StyledRoom viewType={viewType}>\n                      <StyledRoomIcon>\n                        <Home fontSize=\"small\" />\n                      </StyledRoomIcon>\n                      <StyledRoomLabel>Rom:</StyledRoomLabel>\n                      <StyledRoomName>{subSlot.room}</StyledRoomName>\n                    </StyledRoom>\n                  )}\n                </StyledSlotGrid>\n              </StyledSlotGridWrapper>\n            ))}\n          </StyledSlotWithRooms>\n        );\n      })}\n    </>\n  );\n};\n\nSlotsWithRoom.propTypes = {\n  slot: PropTypes.object,\n  viewType: PropTypes.string,\n};\n\nexport default SlotsWithRoom;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport groupBy from 'lodash/groupBy';\nimport styled from '@emotion/styled';\nimport Slot from '.';\nimport { getCookie, setCookie } from '../../util/cookieHelper';\nimport viewmodel from '../../json';\nimport css from '@emotion/css';\nimport mediaQueries from '../../util/mediaQueries';\nimport SlotsWithRoom from './SlotsWithRoom';\n\nconst groupSlots = {\n  1: [\n    { start: '09:00', end: '09:15' },\n    { start: '09:15', end: '09:30' },\n    { start: '09:30', end: '10:00' },\n    { start: '10:00', end: '10:30' },\n    { start: '10:45', end: '11:15' },\n    { start: '11:15', end: '12:00' },\n    { start: '13:00', end: '14:00' },\n    { start: '14:00', end: '15:00' },\n  ],\n};\n\nconst getColumnStyle = viewType => {\n  if (viewType === 'column') {\n    return css`\n      align-items: baseline;\n      flex-wrap: wrap;\n\n      & > * {\n        flex: 1 28%;\n        width: 28%;\n      }\n\n      @media (${mediaQueries.medium}) {\n        flex-direction: column;\n        & > * {\n          flex: 1 100%;\n          width: 100%;\n        }\n      }\n    `;\n  }\n  return '';\n};\n\nconst StyledSlots = styled.div`\n  display: flex;\n  flex-direction: ${p => (p.viewType === 'row' ? 'column' : 'row')};\n  ${p => getColumnStyle(p.viewType)};\n`;\n\nconst Slots = ({\n                 slots,\n                 removeFavorite,\n                 noGroupBy,\n                 viewType,\n                 isFavourites,\n                 activeDay,\n               }) => {\n  const [favorites, setFavorites] = useState([]);\n\n  const updateFavorites = newFavorites => {\n    setCookie('favorites', JSON.stringify(newFavorites));\n    setFavorites(newFavorites);\n    removeFavorite && removeFavorite(newFavorites);\n  };\n\n  useEffect(() => {\n    const favoritesCookies = getCookie('favorites', document.cookie);\n    const currentCookie = favoritesCookies ? JSON.parse(favoritesCookies) : [];\n    setFavorites(currentCookie);\n  }, []);\n\n  if (noGroupBy) {\n    return (\n      <StyledSlots viewType={viewType}>\n        {slots.map(slot => (\n          <Slot\n            key={`${slot.title}_${slot.room}`}\n            slot={slot}\n            setFavorites={updateFavorites}\n            favorites={favorites}\n            viewType={viewType}\n          />\n        ))}\n      </StyledSlots>\n    );\n  }\n\n  if (isFavourites) {\n    const groupedByDate = groupBy(slots, slot => slot.date);\n    return Object.keys(groupedByDate)\n      .sort()\n      .map(startKey => (\n        <div key={startKey}>\n          <h3>{viewmodel.days.find(day => day.date === startKey).label}</h3>\n          <StyledSlots viewType={viewType}>\n            {groupedByDate[startKey]\n              .sort((a, b) => (a.start > b.start ? 1 : -1))\n              .map(slot => (\n                <Slot\n                  key={`${slot.title}_${slot.room}`}\n                  slot={slot}\n                  setFavorites={updateFavorites}\n                  favorites={favorites}\n                  viewType={viewType}\n                />\n              ))}\n          </StyledSlots>\n        </div>\n      ));\n  }\n\n  //const groupedByStart = groupBy(slots, slot => slot.start);\n\n  const newTestSlots = () => {\n    const groups = groupSlots[activeDay.date];\n    if (!groups) {\n      return slots;\n    }\n    let newSlots = [];\n    slots.forEach(slot => {\n      const foundGroupStart = groups.find(group => group.start === slot.start);\n      const foundGroupEnd = groups.find(group => group.end === slot.end);\n      if (slot.type !== 'other' && (foundGroupStart || foundGroupEnd)) {\n        const start = foundGroupStart\n          ? foundGroupStart.start\n          : foundGroupEnd.start;\n        const end = foundGroupEnd ? foundGroupEnd.end : foundGroupStart.end;\n        const alreadyPushed = newSlots.find(newSlot => newSlot.start === start);\n        const alreadyPushedIndex = newSlots.findIndex(\n          newSlot => newSlot.start === start,\n        );\n        if (alreadyPushed) {\n          newSlots = [\n            ...newSlots.slice(0, alreadyPushedIndex),\n            {\n              ...newSlots[alreadyPushedIndex],\n              slots: [...newSlots[alreadyPushedIndex].slots, slot],\n            },\n            ...newSlots.slice(alreadyPushedIndex + 1),\n          ];\n        } else {\n          newSlots.push({\n            start,\n            end,\n            date: slot.date,\n            slots: [slot],\n          });\n        }\n      } else {\n        newSlots.push(slot);\n      }\n    });\n    return newSlots;\n  };\n\n  const groupedByStart = groupBy(newTestSlots(), slot => slot.start);\n  return Object.keys(groupedByStart)\n    .sort()\n    .map(startKey => (\n      <div key={startKey}>\n        <h2>{startKey}</h2>\n        <StyledSlots viewType={viewType}>\n          {groupedByStart[startKey].map((slot, index) =>\n            slot.slots ? (\n              <SlotsWithRoom\n                key={`${index}`}\n                slot={slot}\n                setFavorites={updateFavorites}\n                favorites={favorites}\n                viewType={viewType}\n              />\n            ) : (\n              <Slot\n                key={`${slot.title}_${slot.room}`}\n                slot={slot}\n                setFavorites={updateFavorites}\n                favorites={favorites}\n                viewType={viewType}\n              />\n            ),\n          )}\n        </StyledSlots>\n      </div>\n    ));\n};\n\nSlots.propTypes = {\n  slots: PropTypes.arrayOf(PropTypes.object),\n  removeFavorite: PropTypes.func,\n  noGroupBy: PropTypes.bool,\n  isFavourites: PropTypes.bool,\n  viewType: PropTypes.string,\n};\n\nSlots.defaultProps = {\n  noGroupBy: false,\n  viewType: 'row',\n};\n\nexport default Slots;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport viewmodel from '../json';\nimport { oldColors as colors } from '../util/colors';\nimport mediaQueries from '../util/mediaQueries';\n\nconst StyledGoogleMapsWrapper = styled.div`\n  height: 100vh;\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n`;\n\nconst StyledGoogleMapsBlocker = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`;\n\nconst StyleGoogleMapsContent = styled.div`\n  width: 350px;\n  height: 200px;\n  padding: 20px;\n  top: 0.5rem;\n  left: 0.5rem;\n  position: absolute;\n  text-align: left;\n  background: white;\n  border: 1px solid ${colors.grey};\n\n  @media (${mediaQueries.medium}) {\n    width: 60%;\n    height: 240px;\n  }\n`;\n\nconst StyledGoogleMaps = styled.iframe`\n  height: 100vh;\n  width: 100%;\n  border: none;\n`;\n\nconst GoogleMaps = () => {\n  return (\n    <StyledGoogleMapsWrapper>\n      <StyledGoogleMapsBlocker />\n      <StyleGoogleMapsContent>\n        <h1>Lokasjon</h1>\n        <a\n          href={viewmodel.event.venueUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          <h3>{viewmodel.event.venue}</h3>\n        </a>\n        <a\n          href={viewmodel.event.addressUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          <h3>{viewmodel.event.address}</h3>\n        </a>\n        <h3>{viewmodel.event.city}</h3>\n      </StyleGoogleMapsContent>\n      <StyledGoogleMaps src={viewmodel.event.gmapsUrl} frameBorder=\"0\" />\n    </StyledGoogleMapsWrapper>\n  );\n};\n\nexport default GoogleMaps;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport SafeLink from '../components/SafeLink';\nimport colors from '../util/colors';\nimport spacing from '../util/spacing';\n\nconst StyledNavigationContainer = styled.div`\n  width: 100%;\n  text-align: center;\n  position: fixed;\n  z-index: 3;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  border-bottom: 3px solid ${colors.blueDarkest};\n  background-color: ${colors.blueDark};\n`;\n\nconst StyledNavigation = styled.div`\n  color: white;\n  justify-content: center;\n  display: grid;\n  grid-column-gap: ${spacing.normal};\n  grid-template-columns: repeat(3, ${spacing.spacingUnit * 8}px [col-start]);\n`;\n\nconst StyledPushElement = styled.div`\n  height: ${spacing.small};\n  padding: ${spacing.small} 0;\n`;\n\nconst routes = [\n  { to: '/', title: 'Amsterdam 2019' },\n  { to: '/schedule', title: 'Program' },\n  { to: '/favorites', title: 'Favoritter' },\n];\n\nconst StyledSafeLink = styled(SafeLink)`\n  justify-self: center;\n  padding: ${spacing.small} 0;\n`;\n\nconst Navigation = () => {\n  return (\n    <>\n      <StyledNavigationContainer>\n        <StyledNavigation>\n          {routes.map(route => (\n            <StyledSafeLink\n              key={route.to}\n              to={route.to}\n              activeStyle={{\n                borderBottom: `3px solid ${colors.blue}`,\n                marginBottom: '-3px',\n              }}>\n              {route.title}\n            </StyledSafeLink>\n          ))}\n        </StyledNavigation>\n      </StyledNavigationContainer>\n      <StyledPushElement />\n    </>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport viewmodel from '../json';\nimport GoogleMaps from './GoogleMaps';\nimport Navigation from './Navigation';\n\nconst DefaultLayout = ({ children, showGoogleMaps }) => {\n  return (\n    <div>\n      <Helmet\n        title={viewmodel.meta.title}\n        meta={[\n          {\n            name: 'description',\n            content: viewmodel.meta.description,\n          },\n          { name: 'keywords', content: viewmodel.meta.description },\n        ]}>\n        <link\n          href=\"https://fonts.googleapis.com/css?family=Raleway&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </Helmet>\n      <Navigation />\n      {children}\n      {showGoogleMaps && <GoogleMaps />}\n    </div>\n  );\n};\n\nexport default DefaultLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst StyledSvg = styled.svg`\n  display: block;\n  margin-bottom: -1px;\n  margin-top: -1px;\n`;\n\nconst SectionSeparator = ({\n  position,\n  previousSectionColor,\n  nextSectionColor,\n  ...rest\n}) => {\n  if (position === 'bottom') {\n    return (\n      <StyledSvg\n        {...rest}\n        viewBox=\"0 0 1024 76\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(0.000000, -1005.000000)\">\n            <g transform=\"translate(512.000000, 1043.000000) rotate(-180.000000) translate(-512.000000, -1043.000000) translate(0.000000, 1005.000000)\">\n              <polygon\n                fill=\"#33C6FC\"\n                transform=\"translate(512.000000, 41.000000) scale(1, -1) translate(-512.000000, -41.000000) \"\n                points=\"-1.13686838e-13 6 -1.25055521e-12 76 1024 76 1024 59\"\n              />\n              <polygon\n                fill=\"#3277F8\"\n                points=\"-1.13686838e-13 2 0 50 1024 49.5 1024 2\"\n              />\n              <polygon\n                fill=\"#28334A\"\n                points=\"0 0 1.02318154e-12 14.3333333 1024 59.5 1024 0\"\n              />\n            </g>\n          </g>\n        </g>\n      </StyledSvg>\n    );\n  }\n  return (\n    <StyledSvg\n      {...rest}\n      viewBox=\"0 0 1024 84\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(0.000000, -465.000000)\">\n          <g transform=\"translate(0.000000, 465.000000)\">\n            <polygon\n              fill=\"#33C6FC\"\n              transform=\"translate(512.000000, 44.416667) scale(1, -1) translate(-512.000000, -44.416667) \"\n              points=\"-2.40172465e-15 5.33333333 0 83.5 1024 83.5 1024 65.8333333\"\n            />\n            <polygon fill=\"#3277F8\" points=\"0 2 0 49.5 1024 49.5 1024 2\" />\n            <polygon\n              fill={previousSectionColor || '#28334A'}\n              points=\"0 0 0 5.33333333 1024 59.5 1024 0\"\n            />\n          </g>\n        </g>\n      </g>\n    </StyledSvg>\n  );\n};\n\nSectionSeparator.propTypes = {\n  position: PropTypes.string,\n  previousSectionColor: PropTypes.string,\n  nextSectionColor: PropTypes.string,\n};\n\nSectionSeparator.defaultProps = {\n  position: 'top',\n};\n\nexport default SectionSeparator;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Seperator from './Seperator';\nimport styled from '@emotion/styled';\nimport colors from '../util/colors';\nimport spacing from '../util/spacing';\nimport mediaQueries from '../util/mediaQueries';\n\nconst StyledSection = styled.div`\n  background-color: ${p => p.backgroundColor || colors.blueLighest};\n  min-height: ${p => p.minHeight || '50vh'};\n  color: ${p => p.color || colors.blueDark};\n`;\nconst StyledInnerSection = styled.div`\n  padding: 1rem 15%;\n  min-height: ${p => p.minHeight || '50vh'};\n  @media (${mediaQueries.xxlarge}) {\n    padding: 0 20%;\n  }\n\n  @media (${mediaQueries.medium}) {\n    padding: 0 ${spacing.large};\n  }\n`;\n\nconst ContentSection = ({\n  withTopSeperator,\n  withBottomSeperator,\n  previousSectionColor,\n  nextSectionColor,\n  minHeight,\n  children,\n  ...rest\n}) => {\n  return (\n    <Fragment>\n      <StyledSection minHeight={minHeight} {...rest}>\n        {withTopSeperator && (\n          <Seperator\n            previousSectionColor={previousSectionColor}\n            nextSectionColor={nextSectionColor}\n            position=\"top\"\n          />\n        )}\n        <StyledInnerSection minHeight={minHeight}>\n          {children}\n        </StyledInnerSection>\n        {withBottomSeperator && (\n          <Seperator\n            previousSectionColor={previousSectionColor}\n            nextSectionColor={nextSectionColor}\n            position=\"bottom\"\n          />\n        )}\n      </StyledSection>\n    </Fragment>\n  );\n};\n\nContentSection.defaultProps = {\n  withTopSeperator: false,\n  withBottomSeperator: false,\n};\n\nContentSection.propTypes = {\n  withBottomSeperator: PropTypes.bool,\n  withTopSeperator: PropTypes.bool,\n  previousSectionColor: PropTypes.string,\n  nextSectionColor: PropTypes.string,\n  minHeight: PropTypes.string,\n};\n\nexport default ContentSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'gatsby-link';\nimport { css } from '@emotion/core';\nimport { oldColors } from '../util/colors';\n\nconst linkStyle = (hoverColor = oldColors.primary) => css`\n  background-color: transparent;\n  text-decoration: none;\n  color: white;\n\n  &:hover,\n  &:focus {\n    color: white;\n  }\n`;\n\nconst SafeLink = ({ to, children, hoverColor, ...rest }) => {\n  if (to) {\n    return (\n      <Link to={to} css={linkStyle(hoverColor)} {...rest}>\n        {children}\n      </Link>\n    );\n  }\n  return (\n    <a css={linkStyle} {...rest}>\n      {children}\n    </a>\n  );\n};\n\nSafeLink.propTypes = {\n  to: PropTypes.string,\n  hoverColor: PropTypes.string,\n};\n\nexport default SafeLink;\n","export const setCookie = (name, value, removeCookie) => {\n  let expires;\n  if (removeCookie) {\n    expires = 'Thu, 01 Jan 1970 00:00:01 GMT';\n  } else {\n    const d = new Date();\n    d.setTime(d.getTime() + 9999 * 24 * 60 * 60 * 1000);\n    expires = `expires=${d.toUTCString()}`;\n  }\n  document.cookie = `${name}=${encodeURIComponent(value)}; ${expires}; path=/`;\n};\n\nexport const getCookie = (name, cookies) => {\n  const value = `; ${decodeURIComponent(cookies)}`;\n  const cookieParts = value.split(`; ${name}=`);\n  if (cookieParts.length > 1) {\n    return cookieParts\n      .pop()\n      .split(';')\n      .shift();\n  }\n  return null;\n};\n\nexport const isValidCookie = (name, cookies) =>\n  getCookie(name, cookies) !== null;\n\nexport const deleteCookie = name => {\n  setCookie(name, '', true);\n};\n"],"sourceRoot":""}